package com.payrollapplication.payroll; import java.io.ByteArrayInputStream; import java.io.ByteArrayOutputStream; import java.io.ObjectInputStream; import java.io.ObjectOutputStream; import java.sql.Connection; import java.sql.DriverManager; import java.sql.PreparedStatement; import java.sql.ResultSet; import java.util.logging.Logger; public class EmployeeModelAssembler { private static final Logger logger = Logger.getLogger(EmployeeModelAssembler.class.getName()); private Connection connection; public EmployeeModelAssembler(String dbUrl, String dbUser, String dbPassword) { try { connection = DriverManager.getConnection(dbUrl, dbUser, dbPassword); } catch (Exception e) { logger.severe("Error connecting to database"); e.printStackTrace(); } } public Object deserializeObject(byte[] serializedObject) { try (ObjectInputStream ois = new ObjectInputStream(new ByteArrayInputStream(serializedObject))) { return ois.readObject(); } catch (Exception e) { logger.severe("Deserialization error: " + e.getMessage()); e.printStackTrace(); } return null; } public void logExecutionTime(String query, String userId) { try { PreparedStatement pstmt = connection.prepareStatement("SELECT * FROM users WHERE id = ?"); pstmt.setString(1, userId); ResultSet rs = pstmt.executeQuery(); if (rs.next()) { String username = rs.getString("username"); logger.info("User: " + username + " executed query: " + query); } } catch (Exception e) { logger.severe("Error executing query"); e.printStackTrace(); } } }